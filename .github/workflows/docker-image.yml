name: CI / CD

on:
  push:
    branches: [ master ]

jobs:
#try
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Login DockerHub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}
        password: ${{ secrets.MARIANA_DOCKERHUB_PASSWORD }}
    
    - name: Build reverse_proxy image
      run:  docker build reverse_proxy/ -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/reverse-proxy:newversion -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/reverse-proxy:${{ github.sha }} 
      
    - name: Push reverse_proxy image
      run: docker push --all-tags ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/reverse-proxy 

    - name: Build database image
      run:  docker build database/ -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/database:newversion -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/database:${{ github.sha }} 
      
    - name: Push database image
      run: docker push --all-tags ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/database

    - name: Build payment_gateway image
      run:  docker build payment_gateway/ -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/payment_gateway:newversion -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/payment_gateway:${{ github.sha }} 
      
    - name: Push payment gateway image
      run: docker push --all-tags ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/payment_gateway

    - name: Build app image
      run: docker build app/ -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/app:newversion -t ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/app:${{ github.sha }}

    - name: push app image
      run : docker push --all-tags ${{ secrets.MARIANA_DOCKERHUB_USERNAME }}/app

  deploy:
    #needs: build
    runs-on: ubuntu-latest
    env:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: us-east-2

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      #- name: Configure AWS credentials
        #uses: aws-actions/configure-aws-credentials@v1
        #with:
          
      
      - name: Check if the instance is running
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}; aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} ;aws configure set default.region us-east-2;aws configure set output json; state=`(aws ec2 describe-instance-status --instance-id ${{ secrets.MYM_INSTANCE_ID }}) | grep -w "running" | wc -l`; if [ "$state" -eq 0 ]; then aws ec2 start-instances --instance-ids ${{ secrets.MYM_INSTANCE_ID }}; fi
       
      - name: Transfer files via ssh key
        uses: appleboy/scp-action@master
      
        with:      
          host: ${{ secrets.HOST }}
          username: ${{ secrets.INSTANCE_USERNAME }}
          key: ${{ secrets.INSTANCE_KEY }}
          script: rm docker-compose.yml | rm devsecrets
          source: "./docker-compose.yml, ./devsecrets"
          target: "/home/${{ secrets.INSTANCE_USERNAME }}"
          

      - name: executing remote ssh commands using key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.INSTANCE_USERNAME }}
          key: ${{ secrets.INSTANCE_KEY }}
          script:
              pwd | sudo docker-compose up -d
              
      - name: Trigger end to end tests
        run: |
          curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" --request POST --data '{"event_type": "deployed"}' https://api.github.com/repos/marianabetancur18/atsea-sample-shop-test/dispatches
